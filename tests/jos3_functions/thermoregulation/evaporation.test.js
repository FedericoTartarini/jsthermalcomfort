import { describe, it, expect } from "@jest/globals";
import { $lerp } from "../../../src/supa";
import { evaporation } from "../../../src/jos3_functions/thermoregulation/evaporation.js";
import * as math from "mathjs";

describe("evaporation", () => {
  it.each([
    {
      age: 20,
      expected: {
        "wet": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
        "e_sk": [0.004420996652136314, 0.00116458299811076, 0.007022461588771268, 0.0064563796892369504, 0.008857260040612642, 0.003845505830562024, 0.0025224829099062224, 0.0020012097707047096, 0.003841116172654547, 0.0025201026973817723, 0.001999706633456237, 0.008357714424343484, 0.004478471977310349, 0.002239212930092807, 0.008357442984739507, 0.004479076716683872, 0.002239880073760617],
        "e_max": [0.004420996652136314, 0.00116458299811076, 0.007022461588771268, 0.0064563796892369504, 0.008857260040612642, 0.003845505830562024, 0.0025224829099062224, 0.0020012097707047096, 0.003841116172654547, 0.0025201026973817723, 0.001999706633456237, 0.008357714424343484, 0.004478471977310349, 0.002239212930092807, 0.008357442984739507, 0.004479076716683872, 0.002239880073760617],
        "e_sweat": [0.004420996652136314, 0.00116458299811076, 0.007022461588771268, 0.0064563796892369504, 0.008857260040612642, 0.003845505830562024, 0.0025224829099062224, 0.0020012097707047096, 0.003841116172654547, 0.0025201026973817723, 0.001999706633456237, 0.008357714424343484, 0.004478471977310349, 0.002239212930092807, 0.008357442984739507, 0.004479076716683872, 0.002239880073760617]
      },
    },
    {
      age: 61,
      expected: {
        "wet": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
        "e_sk": [0.004420996652136314, 0.00116458299811076, 0.007022461588771268, 0.0064563796892369504, 0.008857260040612642, 0.003845505830562024, 0.0025224829099062224, 0.0020012097707047096, 0.003841116172654547, 0.0025201026973817723, 0.001999706633456237, 0.008357714424343484, 0.004478471977310349, 0.002239212930092807, 0.008357442984739507, 0.004479076716683872, 0.002239880073760617],
        "e_max": [0.004420996652136314, 0.00116458299811076, 0.007022461588771268, 0.0064563796892369504, 0.008857260040612642, 0.003845505830562024, 0.0025224829099062224, 0.0020012097707047096, 0.003841116172654547, 0.0025201026973817723, 0.001999706633456237, 0.008357714424343484, 0.004478471977310349, 0.002239212930092807, 0.008357442984739507, 0.004479076716683872, 0.002239880073760617],
        "e_sweat": [0.004420996652136314, 0.00116458299811076, 0.007022461588771268, 0.0064563796892369504, 0.008857260040612642, 0.003845505830562024, 0.0025224829099062224, 0.0020012097707047096, 0.003841116172654547, 0.0025201026973817723, 0.001999706633456237, 0.008357714424343484, 0.004478471977310349, 0.002239212930092807, 0.008357442984739507, 0.004479076716683872, 0.002239880073760617]
      },
    },
  ])(
    "should return the correct value when age is $age",
    ({ age, expected }) => {
      const result = evaporation(
        math.matrix($lerp(17, 1, 3)),
        math.matrix($lerp(17, 3, 6)),
        math.matrix($lerp(17, 6, 9)),
        math.matrix($lerp(17, 12, 15)),
        math.matrix($lerp(17, 15, 18)),
        math.matrix($lerp(17, 18, 21)),
        1.72,
        74.43,
        "dubois",
        age,
      );

      expect({
        wet: result.wet.toArray(),
        e_sk: result.e_sk.toArray(),
        e_max: result.e_max.toArray(),
        e_sweat: result.e_sweat.toArray()
      }).toStrictEqual(expected);
    },
  );
});
